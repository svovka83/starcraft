generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String
  password String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Game {
  id Int @id @default(autoincrement())

  token String

  shopOne ShopOne?
  shopTwo ShopTwo?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model ShopOne {
  id Int @id @default(autoincrement())

  unitsOne UnitOne[]

  Game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model ShopTwo {
  id Int @id @default(autoincrement())

  unitsTwo UnitTwo[]

  Game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model BattleOne {
  id Int @id @default(autoincrement())

  unitsOne UnitOne[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model FighterUp {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model UnitOne {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  ShopOne   ShopOne?   @relation(fields: [shopOneId], references: [id])
  shopOneId Int?
  BattleOne BattleOne? @relation(fields: [battleId], references: [id])
  battleId  Int?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model UnitTwo {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  ShopTwo   ShopTwo?   @relation(fields: [shopTwoId], references: [id])
  shopTwoId Int?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
