generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String
  password String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Game {
  id Int @id @default(autoincrement())

  token String

  infoOne InfoOne?
  infoTwo InfoTwo?

  shopOne ShopOne[]
  shopTwo ShopTwo[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model InfoOne {
  id Int @id @default(autoincrement())

  name  String
  image String

  game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model InfoTwo {
  id Int @id @default(autoincrement())

  name  String
  image String

  game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model ShopOne {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  game   Game @relation(fields: [gameId], references: [id])
  gameId Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model ShopTwo {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  game   Game @relation(fields: [gameId], references: [id])
  gameId Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model FighterUp {
  id Int @id @default(autoincrement())

  name   String
  image  String
  mana   Int
  health Int
  attack Int
  price  Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
